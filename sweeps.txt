//@version=5

indicator(title="stop hunts", shorttitle="sweeps", overlay=true, max_lines_count=500, max_labels_count=500)



get_fractal(sourse_high=high, sourse_low=low, period) => // period - нечетное число
    float fractal_high = na
    float fractal_low = na
    helper_high = true
    helper_low = true
    checker_index = int((period - 1) / 2)// индекс проверяемого значения
    for i = 0 to period - 1
        if i != checker_index
            if sourse_high[checker_index] <= sourse_high[i]
                helper_high := false
            if sourse_low[checker_index] >= sourse_low[i]
                helper_low := false

    if helper_high
        fractal_high := sourse_high[checker_index] 
    if helper_low
        fractal_low := sourse_low[checker_index]


    [fractal_high, fractal_low]



var is_current_sweeps = input.bool(defval=true, title="", inline="current", group="current timeframe")
var current_color = input.color(defval=color.black, title="sweeps", inline="current", group="current timeframe")
var current_style = input.string(defval="dotted", title="", options=["dotted", "dashed", "solid"], inline="current", group="current timeframe")

var period = input.int(defval=3, title="period", minval=3, step=2, group="generals")
var width = input.int(defval=1, title="width", minval=0, group="generals")


var non_sweeps_high_lines = array.new_line(na)
var non_sweeps_low_lines = array.new_line(na)

var checker_index = int((period - 1) / 2) // индекс проверяемого бара
i = 0 // вспомогательная переменная для перебора non_sweeps_high_lines
k = 0 // вспомогательная переменная для перебора non_sweeps_low_lines
size_fractal_high = array.size(non_sweeps_high_lines) // вспомогательная переменная для перебора non_sweeps_high_lines, чтобы вовремя прервать цикл
size_fractal_low = array.size(non_sweeps_low_lines) // вспомогательная переменная для перебора non_sweeps_low_lines, чтобы вовремя прервать цикл


if barstate.isfirst
    current_style := current_style=="dotted"?line.style_dotted:current_style=="dashed"?line.style_dashed:line.style_solid

[fractal_high, fractal_low] = if is_current_sweeps
    get_fractal(period=period)



if is_current_sweeps
    if not na(fractal_high)
        array.unshift(non_sweeps_high_lines, line.new(bar_index - checker_index, high[checker_index], bar_index - checker_index, high[checker_index], color=current_color, style=current_style, width=width))
    if not na(fractal_low)
        array.unshift(non_sweeps_low_lines, line.new(bar_index - checker_index, low[checker_index], bar_index - checker_index, low[checker_index], color=current_color, style=current_style, width=width))


    while size_fractal_high > i
        line_high = array.get(non_sweeps_high_lines, i)
        if high > line.get_y1(line_high) and ((close >= open and close < line.get_y1(line_high)) or (close < open and open <= line.get_y1(line_high)))
            line.set_x2(line_high, bar_index)
            array.remove(non_sweeps_high_lines, i)
            size_fractal_high -= 1
        else if high > line.get_y1(line_high)
            array.remove(non_sweeps_high_lines, i)
            size_fractal_high -= 1
        else
            i += 1

    while size_fractal_low > k
        line_low = array.get(non_sweeps_low_lines, k)
        if low < line.get_y1(line_low) and ((close >= open and open > line.get_y1(line_low)) or (close < open and close > line.get_y1(line_low)))
            line.set_x2(line_low, bar_index)
            array.remove(non_sweeps_low_lines, k)
            size_fractal_low -= 1
        else if low < line.get_y1(line_low)
            array.remove(non_sweeps_low_lines, k)
            size_fractal_low -= 1
        else
            k += 1